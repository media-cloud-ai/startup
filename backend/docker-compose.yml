version: "3.6"

services:
  backend:
    image: mediacloudai/ex_backend:latest
    #image: mediacloudai/ex_backend:stc
    #image: ftvsubtil/backend:latest
    volumes:
      - ${PWD}/dash:/dash
    ports:
      - 8080:8080
    environment:
      APP_LABEL: "${APP_LABEL}"
      APP_LOGO: "${APP_LOGO}"
      APP_COMPANY_LOGO: "${APP_COMPANY_LOGO}"
      APP_COMPANY: "${APP_COMPANY}"
      APP_IDENTIFIER: "${APP_IDENTIFIER}"

      PORT: "${BACKEND_PORT}"
      SSL: "${BACKEND_SSL}"

      SENDGRID_API_KEY: "${SENDGRID_API_KEY}"

      DATABASE_URL: "${DATABASE_URL}"
      DATABASE_NAME: "${DATABASE_NAME}"
      DATABASE_PORT: "${DATABASE_PORT}"
      DATABASE_PASSWORD: "${DATABASE_PASSWORD}"
      DATABASE_USERNAME: "${DATABASE_USERNAME}"
      DATABASE_HOSTNAME: "${DATABASE_HOSTNAME}"

      AMQP_HOSTNAME: "${AMQP_HOSTNAME}"
      AMQP_PORT: "${AMQP_PORT}"
      AMQP_MANAGEMENT_PORT: "${AMQP_MANAGEMENT_PORT}"
      AMQP_USERNAME: "${AMQP_USERNAME}"
      AMQP_PASSWORD: "${AMQP_PASSWORD}"
      AMQP_VHOST: "${AMQP_VHOST}"

      DOCKER_CONTAINER_AMQP_TLS: "${AMQP_TLS}"
      DOCKER_CONTAINER_AMQP_HOSTNAME: "${AMQP_HOSTNAME}"
      DOCKER_CONTAINER_AMQP_USERNAME: "${AMQP_USERNAME}"
      DOCKER_CONTAINER_AMQP_PASSWORD: "${AMQP_PASSWORD}"
      DOCKER_CONTAINER_AMQP_VHOST: "${AMQP_VHOST}"

      DOCKER_CONTAINER_BACKEND_HOSTNAME: "http://backend:8080/api"
      DOCKER_CONTAINER_BACKEND_USERNAME: "${ROOT_EMAIL}"
      DOCKER_CONTAINER_BACKEND_PASSWORD: "${ROOT_PASSWORD}"

      WORK_DIR: "/data"
      ROOT_DASH_CONTENT: "/dash"
      
      ROOT_EMAIL: "${ROOT_EMAIL}"
      ROOT_PASSWORD: "${ROOT_PASSWORD}"
      HOSTNAME: "backend"

      VIDEO_FACTORY_ENDPOINT: "http://192.168.101.107:8081/api/"
#    deploy:
#      restart_policy:
#        condition: on-failure
#        delay: 5s
#        max_attempts: 3
#        window: 30s
    networks:
      - global
      - backend
    depends_on:
      - database
      - rabbitmq

  database:
    image: "postgres:9.6.1"
    environment:
      POSTGRES_USER: "${DATABASE_USERNAME}"
      POSTGRES_PASSWORD: "${DATABASE_PASSWORD}"
      POSTGRES_DB: "${DATABASE_NAME}"
#    deploy:
#      restart_policy:
#        condition: on-failure
#        delay: 5s
#        max_attempts: 3
#        window: 30s
    networks:
      - backend

networks:
  backend:
    driver: bridge
  global:
    external: true
